@import "../base/colors";
@import "../base/mixins";
@import "../base/vars";
@import "../base/breakpoints";

@import "cke-styles";

.material-page {
  background-color: $color-application-panel-box-background;
  border: solid 1px $color-application-panel-box-border;
  position: relative;
  width: 100%;

  // scss-lint:disable SelectorFormat
  &.state-HIDDEN {
    opacity: 0.3;
  }

  &.state-SUBMITTED.state-HIDDEN,
  &.state-WITHDRAWN.state-HIDDEN,
  &.state-ANSWERED.state-HIDDEN,
  &.state-PASSED.state-HIDDEN,
  &.state-FAILED.state-HIDDEN,
  &.state-INCOMPLETE.state-HIDDEN {
    opacity: 0.6;
  }
  // scss-lint:enable SelectorFormat
}

.material-page--empty {
  font-style: italic;
  padding: 20px;
  text-align: center;
}

.material-page--workspace-description {
  border: 0;
}

// Studies View exeptions
.material-page--studies-material-page {
  border: 0;
  padding: 0;

  .material-page__content {
    padding: 0;
  }
}

// Evaluation View exeptions
.material-page--evaluation-material-page {
  border: 0;
  padding: 0;

  .material-page__content {
    padding: 0;
  }
}

.material-page__de-floater {
  clear: both;
}

.material-page__title {
  align-items: flex-start;
  display: flex;
  flex-flow: column nowrap;
  font-size: 1.25rem;
  font-weight: 300;
  line-height: 1.75rem;
  margin: 15px 0;
  padding: 0 10px;

  @include breakpoint($breakpoint-pad) {
    font-size: 1.375rem;
    margin: 20px 0;
    padding: 0 20px;
  }
}

.material-page__title-icon {
  position: absolute;
  right: 25px;
}

.material-page__title--exercise {
  border-left: 3px solid $color-exercise;
  padding: 0 0 0 6px;

  @include breakpoint($breakpoint-pad) {
    border-left: 5px solid $color-exercise;
    padding: 0 0 0 15px;
  }
}

.material-page__title--assignment {
  border-left: 3px solid $color-assignment;
  padding: 0 0 0 6px;

  @include breakpoint($breakpoint-pad) {
    border-left: 5px solid $color-assignment;
    padding: 0 0 0 15px;
  }
}

.material-page__title-meta {
  color: $color-info;
  font-style: italic;
  padding: 5px 20px;
}

.material-page__content {
  margin: 15px 0;
  padding: 0 10px;

  @include breakpoint($breakpoint-pad) {
    margin: 20px 0;
    padding: 0 20px;
  }
}

.material-page__content--view-restricted {
  align-items: center;
  // scss-lint:disable VariableForProperty
  color: darken($color-disabled, 30%);
  // scss-lint:enable VariableForProperty
  display: flex;
  font-size: 1rem;
  font-style: italic;
  justify-content: center;
  min-height: 70px;
}

.material-page__content--binary-pdf {
  margin: 15px 0 0;
  padding: 0;

  object {
    height: 520px;
    width: 100%;

    @include breakpoint($breakpoint-pad) {
      height: 966px;
    }

    @include breakpoint($breakpoint-desktop) {
      height: 840px;
    }

    @include breakpoint($breakpoint-desktop-xl) {
      height: 890px;
    }
  }

  @include breakpoint($breakpoint-pad) {
    margin: 20px 0 0;
  }
}

.material-page__content--binary-image {
  margin: 10px 0;

  img {
    max-width: 100%;
  }

  @include breakpoint($breakpoint-pad) {
    margin: 15px 0;
  }
}

.material-page__buttonset {
  align-items: center;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  margin: 15px 0;
  padding: 0 10px;

  @include breakpoint($breakpoint-pad) {
    margin: 20px 0;
    padding: 0 20px;
  }
}

// METADATA
.material-page__metadata-container {
  border-top: 1px solid $color-application-panel-box-border;
  font-size: 0.75rem;
  font-weight: 300;
  margin: 15px 0 0;
  padding: 5px 10px;

  @include breakpoint($breakpoint-pad) {
    margin: 20px 0 0;
    padding: 10px 20px;
  }
}

// PRODUCERS
.material-page__producers {
  align-items: center;
  display: flex;
  flex-flow: row wrap;
  padding: 5px 0;
}

.material-page__producers-label {
  color: $color-default-contrast;
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  margin: 0 5px 0 0;
  text-transform: uppercase;
}

.material-page__producers-item {
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 1;
}

// LICENSE
.material-page__license {
  align-items: center;
  display: flex;
  flex-flow: row wrap;
  padding: 5px 0;
}

.material-page__license-label {
  color: $color-default-contrast;
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  margin: 0 5px 0 0;
  text-transform: uppercase;
}

.material-page__license-item {
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 1;
}

// IMAGE as FIGURE
.image {
  display: inline-block;
  line-height: 1;
  position: relative;

  figcaption {
    background: lighten($color-workspace, 45%);
    color: $color-text-default;
    font-family: $text-font-family;
    font-size: $text-mobile-font-size;
    line-height: 1.125rem;
    padding: 10px;
  }

  .image__details {
    left: auto;
    position: absolute;
    right: 0;
    top: 0;

    &::before {
      background: $color-info;
      border-radius: 100%;
      color: $color-default;
      cursor: help;
      font-size: 1.625rem;
      line-height: 1;
      margin: 5px;
      padding: 1px;
      position: absolute;
      right: 0;
      top: 0;
    }
  }

  .image__details:hover {
    left: 0;

    .image__details-container {
      display: block;
    }
  }

  .image__details-container {
    background: $color-default;
    color: $color-text-default;
    display: none;
    font-family: $text-font-family;
    font-size: $text-mobile-font-size;
    font-weight: 400;
    margin: 2.25rem 0 0;
    opacity: 0.9;
    padding: 15px 10px;
  }

  .image__details-label {
    padding: 0 5px 0 0;
  }
}

// DISABLED & READONLY FORM FIELDS
.material-page__textfield input[readonly],
.material-page__mathfield.material-page__mathfield--readonly,
.material-page__selectfield[disabled],
.material-page__memofield[readonly],
.material-page__ckeditor-replacement.material-page__ckeditor-replacement--readonly {
  border-color: $color-disabled-taskfield-border;
  cursor: text;
}

.material-page__checkbox[disabled],
.material-page__radiobutton[disabled] {
  border-color: darken($color-disabled-taskfield-border, 10%);
  cursor: default;

  &[checked],
  &:checked {
    background-color: darken($color-disabled-taskfield-border, 20%);
    border-color: darken($color-disabled-taskfield-border, 20%);
  }
}

// DISABLED CUSTOM TASK FIELDS
.material-page__taskfield-disabled {

  .material-page__sorterfield-item,
  .material-page__organizerfield-category,
  .material-page__organizerfield-category-title,
  .material-page__organizerfield-term,
  .material-page__connectfield-term,
  .material-page__connectfield-term-number,
  .material-page__connectfield-counterpart,
  .material-page__connectfield-counterpart-number {
    border-color: $color-disabled-taskfield-border;
    cursor: text;
  }

  &.material-page__sorterfield {
    border-color: $color-disabled-taskfield-border;
  }

  .material-page__organizerfield-term--in-use,
  .material-page__organizerfield-term--no-dragging {
    background: $color-disabled-taskfield-background;
  }

  .material-page__organizerfield-term-icon,
  .material-page__sorterfield-item-icon,
  .material-page__connectfield-counterpart-icon {
    color: $color-disabled-taskfield-icon;
    cursor: default;
    transform: none;
    transition: none;
  }

  .material-page__connectfield-term-data-container:hover,
  .material-page__connectfield-counterpart-data-container:hover {
    border: 2px solid $color-disabled-taskfield-border;
  }
}

// DISABLED AUDIO AND FILE FIELDS
.material-page__filefield.material-page__taskfield-disabled,
.material-page__audiofield.material-page__taskfield-disabled {
  border-color: $color-disabled-taskfield-border;
  cursor: text;

  .material-page__audiofield-files-container,
  .file-uploader__items-container {
    border: 0;
  }
}

// CORRECT ANSWERS COUNTER
.material-page__correct-answers {
  align-items: center;
  display: flex;
  flex-flow: row nowrap;
  font-size: 0.875rem;
  font-weight: 300;
  justify-content: center;
  margin: 10px 0;

  @include breakpoint($breakpoint-pad) {
    font-size: 1rem;
    margin: 10px 0 20px;
  }
}

.material-page__correct-answers-label {
  padding: 0 10px 0 0;
}

// WORD AND CHARACTER COUNTER
.material-page__counter-wrapper {
  align-items: center;
  display: flex;
  flex-flow: row wrap;
  font-size: 85%;
  height: 2rem;
  justify-content: flex-end;
}

.material-page__word-count-container,
.material-page__character-count-container {
  align-items: center;
  background: lighten($taskfield-border-color, 30%);
  border-bottom-left-radius: 2px;
  display: flex;
  flex-basis: auto;
  flex-flow: row nowrap;
  flex-grow: 0;
  flex-shrink: 0;
  padding: 2px 6px;
}

.material-page__word-count-title,
.material-page__character-count-title {
  flex-basis: auto;
  flex-grow: 1;
  flex-shrink: 1;
  padding: 0 4px;
}

.material-page__word-count,
.material-page__character-count {
  flex-basis: auto;
  flex-grow: 1;
  flex-shrink: 1;
  font-weight: 400;
}

// FIELD'S EXAMPLES
.material-page__field-answer-examples {
  @include text;
  align-items: center;
  background: $color-default;
  border: 1px solid $color-example-border;
  border-radius: 2px;
  box-shadow: 0 3px 5px 2px $color-example-box-shadow;
  display: inline-flex;
  flex-flow: row wrap;
  margin: 4px;
  max-width: 100%;
  padding: 4px;
  vertical-align: middle;
}

.material-page__field-answer-examples--memofield {
  align-items: flex-start;
  flex-flow: column nowrap;
  width: calc(100% - 8px); // 2 * padding and margin
}

.material-page__field-answer-examples--sorterfield {
  display: flex;
  flex-flow: row wrap;
  margin: 5px 0;
}

.material-page__field-answer-examples-title {
  font-weight: 400;
  line-height: 1.15rem;
  padding: 2px 4px;
}

.material-page__field-answer-examples-title--memofield {
  align-self: flex-start;
}

.material-page__field-answer-example {
  border-radius: 2px;
  font-weight: 300;
  line-height: 1.15rem;
  margin: 0 4px 0 0;
  padding: 2px 4px;
}

// FIELD'S EXPLANATION
.material-page__field-explanation-wrapper {
  align-items: center;
  display: inline-flex;
  justify-content: center;
}

.material-page__field-explanation-button {
  align-items: center;
  color: $color-info;
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  padding: 2px;
}

// FIELD'S HINT TEXT
.material-page__field-hint {
  background-color: $color-default;
  border: 1px solid $taskfield-border-color;
  border-radius: 2px;
  color: $color-default-contrast;
  display: block;
  max-width: 300px;
  opacity: 0;
  padding: 3px 6px;
  position: absolute;
  text-align: left;
  visibility: hidden;
  z-index: -1;

  @include breakpoint($breakpoint-pad) {
    font-weight: 300;
    padding: 5px 10px;
  }
}

// TASK FIELDS

// Generic
.material-page__checkable-label {
  @include taskfield-text;
  display: inline;
  padding: 0 0 0 6px;
}

// Math field (Digabi editor)
.material-page__mathfield {
  @include taskfield-text;
  @include taskfield-defaults;
  box-sizing: content-box;
  margin: 4px 0;
  max-width: calc(100% - 8px);
  min-height: 7.25rem;
  outline: none;
  padding: 5px;

  &.focused,
  &:focus {
    border: 2px solid $taskfield-border-color;

    img {
      background: lighten($color-tertiary, 30%);
      border: 1px solid lighten($color-tertiary, 25%);
    }
  }

  img {
    border: 1px solid transparent;
    cursor: pointer;
    margin: 4px;
    padding: 3px 10px;
    vertical-align: middle;
  }
}

// Text field
.material-page__textfield-wrapper {
  align-items: center;
  display: inline-flex;
  flex-flow: row wrap;
  max-width: 100%;
  position: relative;

  &:hover {

    .material-page__field-hint {
      opacity: 0;
      visibility: hidden;
      z-index: 2;
    }
  }
}

.material-page__textfield {
  max-width: 100%;

  &::-ms-clear {
    display: none;
  }

  input {
    @include taskfield-text;
    @include taskfield-defaults;
    display: inline-flex;
    margin: 4px;
    max-width: calc(100% - 8px);
    padding: 4px 6px;
  }

  &.correct-answer input {
    border-color: $color-correct-answer;
  }

  &.incorrect-answer input {
    border-color: $color-incorrect-answer;
  }
}

// Textfield style implementation for Evaluation view
.material-page__textfield--evaluation {
  @include taskfield-text;
  background: $color-evaluation-readonly-taskfield-background;
  border: 2px solid $color-evaluation-readonly-taskfield-background;
  border-radius: 2px;
  display: inline-block;
  margin: 4px;
  min-width: 30px;
  padding: 0 6px;

  &.correct-answer {
    border: 2px solid $color-correct-answer;
  }

  &.incorrect-answer {
    border: 2px solid $color-incorrect-answer;
  }
}

// Select field - list and drop down
.material-page__selectfield-wrapper {
  align-items: center;
  display: inline-flex;
  flex-flow: row wrap;
  position: relative;
}

.material-page__selectfield-wrapper--list {
  vertical-align: middle;
}

.material-page__selectfield {
  @include taskfield-text;
  @include taskfield-defaults;
  margin: 4px;
  padding: 3px;

  &.correct-answer {
    border-color: $color-correct-answer;
  }

  &.incorrect-answer {
    border-color: $color-incorrect-answer;
  }
}

.material-page__selectfield-item-container {
  @include taskfield-text;
  padding: 2px 4px; // This affects only select element that has size attribute set (element is list)
}

// Radio button
.material-page__radiobutton-wrapper { // This wraps task field itself and correct answers component inside of the same parent
  align-items: center;
  display: inline-flex;
  flex-flow: row wrap;
  position: relative;
  vertical-align: middle;
}

.material-page__radiobutton-items-wrapper {
  align-items: center;
  background: lighten($taskfield-border-color, 30%);
  border-radius: 2px;
  display: inline-flex;
  margin: 4px;
  padding: 4px;

  &.correct-answer { // If the whole taskfield is correct we then mark taskfield items as correct

    .material-page__radiobutton {
      border-color: $color-correct-answer;

      &:checked {
        background-color: $color-correct-answer;
      }
    }
  }

  &.incorrect-answer { // If the whole taskfield is correct we then mark taskfield items as correct

    .material-page__radiobutton {
      border-color: $color-incorrect-answer;

      &:checked {
        background-color: $color-incorrect-answer;
      }
    }
  }
}

.material-page__radiobutton-items-wrapper--vertical {
  align-items: flex-start;
  flex-flow: column nowrap;
  vertical-align: middle;
}

.material-page__radiobutton-items-wrapper--horizontal {
  flex-flow: row wrap;
}

.material-page__radiobutton-item-container {
  align-items: center;
  display: inline-flex;
  margin: 0 2px;
  padding: 2px;
}

.material-page__radiobutton {
  align-items: center;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  border: solid 2px $taskfield-border-color;
  border-radius: 100%;
  display: inline-flex;
  height: 1.125rem;
  justify-content: center;
  min-width: 1.125rem;
  width: 1.125rem;

  &:checked {
    background-color: $taskfield-border-color;
    border: solid 2px $taskfield-border-color;
  }

  &:checked::after {
    color: $color-default;
    content: "\e639";
    font-family: muikku;
    font-size: 0.875rem;
  }
}

// Checkbox
.material-page__checkbox-wrapper { // This wraps task field itself and correct answers component inside of the same parent
  align-items: center;
  display: inline-flex;
  flex-flow: row wrap;
  position: relative;
  vertical-align: middle;
}

.material-page__checkbox-items-wrapper {
  align-items: center;
  background: lighten($taskfield-border-color, 30%);
  border-radius: 2px;
  display: inline-flex;
  margin: 4px;
  padding: 4px;
}

.material-page__checkbox-items-wrapper--vertical {
  align-items: flex-start;
  flex-flow: column nowrap;
  vertical-align: middle;
}

.material-page__checkbox-items-wrapper--horizontal {
  flex-flow: row wrap;
}

.material-page__checkbox-item-container {
  align-items: center;
  display: inline-flex;
  margin: 0 2px;
  padding: 2px;
}

// We compare student's answer to the task fields preset of correct answers and display correnct/incorrect state individually
.material-page__checkbox {
  align-items: center;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  border: solid 2px $taskfield-border-color;
  border-radius: 2px;
  display: inline-flex;
  height: 1.125rem;
  justify-content: center;
  min-width: 1.125rem;
  width: 1.125rem;

  &:checked {
    background-color: $taskfield-border-color;
    border: solid 2px $taskfield-border-color;
  }

  &:checked::after {
    color: $color-default;
    content: "\e639";
    font-family: muikku;
    font-size: 0.875rem;
  }

  &.correct-answer {
    border-color: $color-correct-answer;

    &:checked {
      background-color: $color-correct-answer;
      border-color: $color-correct-answer;
    }
  }

  &.incorrect-answer {
    border-color: $color-incorrect-answer;

    &:checked {
      background-color: $color-incorrect-answer;
      border-color: $color-incorrect-answer;
    }
  }
}

// Memo field
.material-page__memofield-wrapper {
  display: block;
  padding: 0.01em; // This fixes CKEditors top margin but does not affect anything visually
  position: relative;

  .material-page__field-answer-synchronizer {
    left: 0;
  }

  // Necessary evil as material editor uses the same class names to provide wysiwyg experience close to the actualy material page render
  // but unfortunately it does affect taskfields with ckeditors as well so this is needed to override padding rules.
  // scss-lint:disable SelectorFormat
  .cke_editable.cke_wysiwyg_div {
    padding: 0 8px;
  }
  // scss-lint:enable SelectorFormat

  .cke { // This needs to be here so we can override the ckeditor's visuals/size partly
    background: $color-default;
    border: 2px solid $taskfield-border-color;
    border-radius: 2px;
    box-sizing: border-box;
    margin: 4px 0 0;
    max-width: 100%;
    min-width: 100%;
  }

  // scss-lint:disable SelectorFormat
  .cke_wysiwyg_div {
    min-height: 150px;
  }
  // scss-lint:enable SelectorFormat
}

.material-page__memofield {
  @include taskfield-text;
  @include taskfield-defaults;
  line-height: 1.25rem;
  margin: 4px 0 0;
  max-width: 100%;
  min-width: 100%;
  padding: 4px 8px;
  width: 100%;

  @include breakpoint($breakpoint-pad) {
    line-height: 1.75rem;
  }
}

.material-page__memofield--evaluation { // This is for memofield replacement style in evaluation views
  background: $color-evaluation-readonly-taskfield-background;
  border: 0;
  border-radius: 2px;
  padding: 15px 20px;
}

.material-page__ckeditor-replacement { // This is for ckeditor replacement div
  @include taskfield-text;
  @include taskfield-defaults;
  display: block;
  line-height: 1.25rem;
  margin: 4px 0 0;
  max-width: 100%;
  min-height: 2.25rem;
  min-width: 100%;
  padding: 5px 20px;
  width: 100%;

  @include breakpoint($breakpoint-pad) {
    line-height: 1.75rem;
    min-height: 2.75rem;
  }
}

.material-page__ckeditor-replacement--evaluation { // This is for ckeditor replacement div in evaluation views
  background: $color-evaluation-readonly-taskfield-background;
  border: 0;
  border-radius: 2px;
}

// File field
.material-page__filefield-wrapper {
  display: block;
  position: relative;
}

.material-page__filefield {
  display: block;
}

// Audio field
.material-page__audiofield-wrapper {
  display: block;
  position: relative;
}

.material-page__audiofield {
  @include taskfield-text;
  @include taskfield-defaults;
  display: block;
  margin: 4px 0 0;
  position: relative;
  width: 100%;
}

.material-page__audiofield-files-container {
  border-top: 3px dotted lighten($taskfield-border-color, 20%);
  display: block;
}

.material-page__audiofield-files-container--empty {
  border: 0;
  flex-basis: auto;
  flex-grow: 1;
  flex-shrink: 1;
  margin: 10px 0;
  text-align: center;
}

.material-page__audiofield-file-container {
  align-items: center;
  display: flex;
  flex-flow: row nowrap;
  height: 28px;
  margin: 10px 5px;
  padding: 0 5px;

  // These links needs to be nested here as rich-text css rules overrides them if not
  .material-page__audiofield-remove-file-button {
    background: transparent;
    color: $color-fatal;
    cursor: pointer;
    font-size: 1.0625rem;
    height: auto;
    margin: 0 0 0 10px;
    padding: 5px;
    text-decoration: none;
    width: auto;
  }

  .material-page__audiofield-download-file-button {
    background: transparent;
    color: $color-info;
    cursor: pointer;
    font-size: 1.0625rem;
    height: auto;
    margin: 0 0 0 10px;
    padding: 5px;
    text-decoration: none;
    width: auto;
  }
}

.material-page__audiofield-file-container--uploading,
.material-page__audiofield-file-container--recording {
  height: 40px;
}

.material-page__audiofield-file {
  @include text;
  flex-basis: auto;
  flex-grow: 1;
  flex-shrink: 1;
  height: 1.75rem;
  max-width: calc(100% - 74px);
}

.material-page__audiofield-file--recording,
.material-page__audiofield-file--uploading {
  height: auto;
}

.material-page__audiofield-file-record-progressbar {
  @include text;
  flex-basis: auto;
  flex-grow: 1;
  flex-shrink: 1;
  font-weight: 400;
  height: auto;
}

.material-page__audiofield-file-upload-progressbar {
  @include text;
  flex-basis: auto;
  flex-grow: 1;
  flex-shrink: 1;
  font-weight: 400;
  height: auto;
}

.material-page__audiofield-file-record-percentage {
  line-height: 1;
  margin: 0 0 5px;
}

.material-page__audiofield-file-upload-percentage {
  line-height: 1;
  margin: 0 0 5px;
}

.material-page__audiofield-controls {
  align-items: center;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  padding: 10px;

  @include breakpoint($breakpoint-pad) {
    padding: 15px 20px;
  }

  .material-page__audiofield-start-record-button,
  .material-page__audiofield-stop-record-button {
    @include prefix(transition, moz ms o webkit, background 0.15s);
    align-items: center;
    border-radius: 20px;
    cursor: pointer;
    display: flex;
    flex-basis: auto;
    flex-flow: row nowrap;
    flex-grow: 0;
    flex-shrink: 0;
    font-weight: 300;
    margin: 0 10px;
    padding: 6px 10px;
    text-decoration: none;
    text-transform: uppercase;
  }

  // We set the record/stop buttons colors here
  .material-page__audiofield-start-record-button {
    border: 1px solid $color-recording;
    color: $color-recording;

    &:hover {
      background: $color-recording;
      border: 1px solid $color-recording;
      color: $color-default;

      .material-page__audiofield-start-record-label {
        color: $color-default;
      }
    }
  }

  .material-page__audiofield-stop-record-button {
    border: 1px solid $color-default-contrast;
    color: $color-default-contrast;

    &:hover {
      background: $color-default-contrast;
      border: 1px solid $color-default-contrast;
      color: $color-default;

      .material-page__audiofield-stop-record-label {
        color: $color-default;
      }
    }
  }

  .material-page__audiofield-start-record-label,
  .material-page__audiofield-stop-record-label {
    @include text;
    padding: 0 0 0 4px;
  }

  // We set the resord/stop labels colors here
  .material-page__audiofield-start-record-label {
    color: $color-recording;
  }

  .material-page__audiofield-stop-record-label {
    color: $color-default-contrast;
  }

  .material-page__audiofield-description {
    flex-basis: auto;
    flex-grow: 0;
    flex-shrink: 1;
    margin: 10px 0 0;

    @include breakpoint($breakpoint-pad) {
      margin: 5px 0;
    }
  }
}

// Sorter field
.material-page__sorterfield-wrapper {
  display: inline-block;
  position: relative;
  vertical-align: middle;
}

.material-page__sorterfield {
  display: flex;

  &.correct-answer { // If the whole taskfield is correct we then mark taskfield items as correct

    .material-page__sorterfield-item {
      border-color: $color-correct-answer;
    }
  }
}

.material-page__sorterfield--vertical {
  align-items: flex-start;
  border-left: 1px solid lighten($taskfield-border-color, 10%);
  flex-flow: column nowrap;
  padding: 0 0 0 5px;
}

.material-page__sorterfield--horizontal {
  align-items: center;
  border-bottom: 1px solid lighten($taskfield-border-color, 10%);
  display: inline-flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  padding: 0 0 5px;
}

.material-page__sorterfield-item {
  @include taskfield-text;
  @include taskfield-defaults;
  align-items: center;
  cursor: grab;
  display: flex;
  flex-flow: row nowrap;
  margin: 4px;
  user-select: none;

  &.correct-answer {
    border-color: $color-correct-answer;
  }

  &.incorrect-answer {
    border-color: $color-incorrect-answer;
  }
}

.material-page__sorterfield-item--selected {
  background: $taskfield-border-color;
  color: $color-default;

  .material-page__sorterfield-item-icon {
    background: transparent;
    color: $color-default;
  }
}

.material-page__sorterfield-item-icon {
  color: $taskfield-border-color;
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  padding: 6px;
}

.material-page__sorterfield-item-label {
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  line-height: 1; // This prevents text misalignment in mobile views
  max-width: calc(100% - 25px);
  padding: 6px 6px 6px 0;

  @include breakpoint($breakpoint-pad) {
    line-height: 1.25rem;
    max-width: calc(100% - 28px);
    padding: 4px 6px 4px 0;
  }
}

// Organizer field
.material-page__organizerfield-wrapper {
  display: block;
  position: relative;
}

.material-page__organizerfield {
  display: block;

  &.correct-answer {

    .material-page__organizerfield-category { // If the whole taskfield is correct we then mark taskfield's category and items as correct . This class inception is needed so we don't add styles to terms that are only available
      border-color: $color-correct-answer;
    }

    .material-page__organizerfield-term {
      background: $color-default;
      border-color: $color-correct-answer;
    }
  }
}

.material-page__organizerfield-terms {
  display: block;
}

.material-page__organizerfield-terms-title { // Title of draggable terms
  display: block;
  font-weight: 600;
  padding: 0 4px;

  @include breakpoint($breakpoint-pad) {
    font-weight: 400;
  }
}

.material-page__organizerfield-terms-container {
  display: flex;
  flex-flow: row wrap;
}

.material-page__organizerfield-term { // Single draggable term
  @include taskfield-text;
  @include taskfield-defaults;
  align-items: center;
  cursor: grab;
  display: inline-flex;
  flex-flow: row nowrap;
  margin: 4px;
  user-select: none;

  &.correct-answer {
    background: $color-default;
    border-color: $color-correct-answer;
  }

  &.incorrect-answer {
    background: $color-default;
    border-color: $color-incorrect-answer;
  }
}

.material-page__organizerfield-term--in-use { // Single draggable term in IN USE state
  background: lighten($taskfield-border-color, 25%);
}

// Selected needs to be defined after edited unless we want to create more complex scss inception
// as edited and selected modifiers can be present at the same time and we need to show visually if
// edited item is selected
.material-page__organizerfield-term--selected { // Single draggable term in SELEDTED state
  background: $taskfield-border-color;
  color: $color-default;

  .material-page__organizerfield-term-icon {
    color: $color-default;
  }
}

.material-page__organizerfield-term--no-dragging { // Single term in NO DRAGGING state a.k.a term is placed in target container
  background: lighten($taskfield-border-color, 25%);
  cursor: default;

  .material-page__organizerfield-term-icon {
    @include rotate-icon-on-hover;
    cursor: pointer;
    padding: 6px;

  }

  .material-page__organizerfield-term-label {
    padding: 6px 0 6px 6px;

    @include breakpoint($breakpoint-pad) {
      padding: 4px 0 4px 6px;
    }
  }
}

.material-page__organizerfield-term--missing {
  cursor: default;
  line-height: 1; // This prevents text misalignment in mobile views
  opacity: 0.6;
  padding: 4px 6px;

  @include breakpoint($breakpoint-pad) {
    line-height: 1.25rem;
  }
}

.material-page__organizerfield-term-icon {
  color: $taskfield-border-color;
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  padding: 6px;
}

.material-page__organizerfield-term-label {
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  line-height: 1; // This prevents text misalignment in mobile views
  max-width: calc(100% - 25px);
  padding: 6px 6px 6px 0;

  @include breakpoint($breakpoint-pad) {
    line-height: 1.25rem;
    max-width: calc(100% - 28px);
    padding: 4px 6px 4px 0;
  }
}

.material-page__organizerfield-categories { // Wrapper for multiple categories
  align-items: flex-start;
  display: flex;
  flex-flow: row wrap;
  margin: 5px 0 0;

  @include breakpoint($breakpoint-pad) {
    flex-flow: row wrap;
  }
}

.material-page__organizerfield-category { // Wrapper for single category
  @include taskfield-defaults;
  flex-basis: 100%;
  flex-grow: 0;
  flex-shrink: 1;
  margin: 4px;

  &.correct-answer {
    border-color: $color-correct-answer;
  }

  &.incorrect-answer {
    border-color: $color-incorrect-answer;
  }

  @include breakpoint($breakpoint-pad) {
    flex-basis: calc(50% - 8px);
  }
}

.material-page__organizerfield-category-title { // Title of single category
  border-bottom: 3px dotted lighten($taskfield-border-color, 20%);
  display: block;
  font-weight: 600;
  padding: 4px 6px;

  @include breakpoint($breakpoint-pad) {
    font-weight: 400;
  }
}

.material-page__organizerfield-category-terms-container { // Container of single category where terms can be dragged
  display: block;
  min-height: 100px;
  padding: 5px;
}

// Connectfield
.material-page__connectfield-wrapper {
  display: block;
  position: relative;
}

.material-page__connectfield {
  align-items: flex-start;
  display: flex;
  flex-flow: row wrap;

  @include breakpoint($breakpoint-pad) {
    flex-flow: row wrap;
  }
}

.material-page__connectfield-terms-container {
  flex-basis: 50%;
  flex-grow: 0;
  flex-shrink: 1;

  @include breakpoint($breakpoint-pad) {
    flex-basis: 50%;
  }
}

.material-page__connectfield-term {
  @include taskfield-text;
  @include taskfield-defaults;
  align-items: center;
  cursor: pointer;
  display: flex;
  flex-flow: row nowrap;
  height: 2.5rem;
  margin: 8px 4px;
  position: relative;
  user-select: none;

  &.correct-answer { // Unfortunate class inception here as we want to separate selected element visually after taskfield has been checked for answers
    background: $color-default;
    border-color: $color-correct-answer;

    &.material-page__connectfield-term--selected {
      background: $taskfield-border-color;
      border-color: $taskfield-border-color;
    }

    .material-page__connectfield-term-number {
      border-color: $color-correct-answer;
    }

    .material-page__connectfield-term-data-container:hover { // We need to place this rule here so in case of long text in term on hover event we don't render wrong colored border if answer is correct
      border: 2px solid $color-correct-answer;
    }
  }

  &.incorrect-answer {
    background: $color-default;
    border-color: $color-incorrect-answer;

    &.material-page__connectfield-term--selected {
      background: $taskfield-border-color;
      border-color: $taskfield-border-color;
    }

    .material-page__connectfield-term-number {
      border-color: $color-incorrect-answer;
    }

    .material-page__connectfield-term-data-container:hover { // We need to place this rule here so in case of long text in term on hover event we don't render wrong colored border if answer is incorrect
      border: 2px solid $color-incorrect-answer;
    }
  }
}

.material-page__connectfield-term-number {
  @include text;
  align-items: center;
  background: $color-default;
  border: 1px solid $taskfield-border-color;
  border-radius: 100%;
  display: inline-flex;
  height: 1.25rem;
  justify-content: center;
  margin: 0 0 0 -0.625rem;
  width: 1.25rem;

  @include breakpoint($breakpoint-pad) {
    height: 1.5rem;
    margin: 0 0 0 -0.75rem;
    width: 1.5rem;
  }
}

.material-page__connectfield-term-label {
  display: block;
  flex-basis: auto;
  flex-grow: 1;
  flex-shrink: 0;
  line-height: 1; // This prevents text misalignment in mobile views
  overflow: hidden;
  padding: 6px;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100px;

  @include breakpoint($breakpoint-pad) {
    line-height: 1.25rem;
  }
}

.material-page__connectfield-term--edited {
  background: lighten($taskfield-border-color, 25%);
}

// Selected needs to be defined after edited unless we want to create more complex scss inception
// as edited and selected modifiers can be present at the same time and we need to show visually if
// edited item is selected
.material-page__connectfield-term--selected {
  background: $taskfield-border-color;
  color: $color-default;

  .material-page__connectfield-term-icon {
    color: $color-default;
  }
}

.material-page__connectfield-counterparts-container {
  flex-basis: 50%;
  flex-grow: 0;
  flex-shrink: 1;

  @include breakpoint($breakpoint-pad) {
    flex-basis: 50%;
  }
}

.material-page__connectfield-counterpart {
  @include taskfield-text;
  @include taskfield-defaults;
  align-items: center;
  cursor: grab;
  display: flex;
  flex-flow: row nowrap;
  height: 2.5rem;
  margin: 8px 4px;
  position: relative;
  user-select: none;

  &.correct-answer { // Unfortunate class inception here as we want to separate selected element visually after taskfield has been checked for answers
    background: $color-default;
    border-color: $color-correct-answer;

    &.material-page__connectfield-counterpart--selected {
      background: $taskfield-border-color;
      border-color: $taskfield-border-color;
    }

    .material-page__connectfield-counterpart-number {
      border-color: $color-correct-answer;
    }

    .material-page__connectfield-counterpart-data-container:hover { // We need to place this rule here so in case of long text in counterpart on hover event we don't render wrong colored border if answer is correct
      border: 2px solid $color-correct-answer;
    }
  }

  &.incorrect-answer {
    background: $color-default;
    border-color: $color-incorrect-answer;

    &.material-page__connectfield-counterpart--selected {
      background: $taskfield-border-color;
      border-color: $taskfield-border-color;
    }

    .material-page__connectfield-counterpart-number {
      border-color: $color-incorrect-answer;
    }

    .material-page__connectfield-counterpart-data-container:hover { // We need to place this rule here so in case of long text in counterpart on hover event we don't render wrong colored border if answer is incorrect
      border: 2px solid $color-incorrect-answer;
    }
  }
}

.material-page__connectfield-counterpart-number {
  @include text;
  align-items: center;
  background: $color-default;
  border: 1px solid $taskfield-border-color;
  border-radius: 100%;
  display: flex;
  height: 1.25rem;
  justify-content: center;
  margin: 0 -0.625rem 0 0;
  width: 1.25rem;

  @include breakpoint($breakpoint-pad) {
    height: 1.5rem;
    margin: 0 -0.75rem 0 0;
    width: 1.5rem;
  }
}

.material-page__connectfield-counterpart-icon {
  color: $taskfield-border-color;
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  padding: 6px;
}

.material-page__connectfield-counterpart-label {
  display: block;
  flex-basis: auto;
  flex-grow: 1;
  flex-shrink: 0;
  line-height: 1; // This prevents text misalignment in mobile views
  overflow: hidden;
  padding: 6px 6px 6px 0;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100px;

  @include breakpoint($breakpoint-pad) {
    line-height: 1.25rem;
  }
}

.material-page__connectfield-counterpart--edited {
  background: lighten($taskfield-border-color, 25%);
}

// Selected needs to be defined after edited unless we want to create more complex scss inception
// as edited and selected modifiers can be present at the same time and we need to show visually if
// edited item is selected
.material-page__connectfield-counterpart--selected {
  background: $taskfield-border-color;
  color: $color-default;

  .material-page__connectfield-counterpart-icon {
    color: $color-default;
  }
}

// Hover effect rules for terms and counterparts when textual content
// is larger than what can be fitted in 1 row
.material-page__connectfield-term--edited,
.material-page__connectfield-counterpart--edited {

  .material-page__connectfield-term-data-container:hover,
  .material-page__connectfield-counterpart-data-container:hover {
    background: lighten($taskfield-border-color, 25%);
  }
}

.material-page__connectfield-term--selected,
.material-page__connectfield-counterpart--selected {

  .material-page__connectfield-term-data-container:hover,
  .material-page__connectfield-counterpart-data-container:hover {
    background: $taskfield-border-color;
  }
}

.material-page__connectfield-term-data-container,
.material-page__connectfield-counterpart-data-container {
  align-items: center;
  cursor: pointer;
  display: flex;
  flex-flow: row nowrap;
  height: 2.5rem;
  position: relative;
  width: 100%;

  &:hover {
    background: $color-default;
    border: 2px solid $taskfield-border-color;
    height: auto;
    left: -2px;
    min-height: 2.5rem;
    padding: 5px 0;
    position: absolute;
    top: -2px;
    width: calc(100% + 4px);
    z-index: 99;

    .material-page__connectfield-term-number,
    .material-page__connectfield-counterpart-number {
      align-self: flex-start;
      margin-top: 3px;

      @include breakpoint($breakpoint-pad) {
        margin-top: 4px;
      }
    }

    .material-page__connectfield-counterpart-icon {
      align-self: flex-start;
      padding: 6px;

      @include breakpoint($breakpoint-pad) {
        padding: 8px 6px 6px;
      }
    }

    .material-page__connectfield-term-label,
    .material-page__connectfield-counterpart-label {
      overflow: auto;
      text-overflow: initial;
      white-space: normal;
    }

    @include breakpoint($breakpoint-pad) {
      padding: 2px 0;
    }
  }
}

// Math field (Digabi editor wrapper)
.material-page__mathfield-wrapper {
  position: relative;
}

// Iframe Wrapper
.material-page__iframe-wrapper {
  display: block;
  max-width: 100%;
}

// Table Wrapper
.material-page__table-wrapper {
  max-width: 100%;
  overflow-x: auto;
}

// Word Definition
mark[data-muikku-word-definition] {
  background: transparent;
  border-bottom: 1px dashed  $color-material-word-definition-color;
  color: $color-material-word-definition-color;
  cursor: help;
  font-weight: 400;
  position: relative;
}

// Assignment assessment
.material-page__assignment-assessment {
  border-left-style: solid;
  border-left-width: 5px;
  border-top: 1px solid $color-default-item-separator-border;
  display: flex;
  flex-flow: column nowrap;
  margin: 20px 0 0;
  padding: 10px;
  position: relative;

  @include breakpoint($breakpoint-pad) {
    margin: 20px 0 0;
    padding: 20px;
  }
}

.material-page__assignment-assessment--incomplete {
  background: lighten($color-incomplete, 45%);
  border-left-color: $color-incomplete;

  .material-page__assignment-assessment-grade-data {
    background: $color-incomplete;
  }

  .material-page__assignment-assessment-icon {
    color: $color-incomplete;
  }
}

.material-page__assignment-assessment--passed {
  background: lighten($color-passed, 55%);
  border-left-color: $color-passed;

  .material-page__assignment-assessment-grade-data {
    background: $color-passed;
  }

  .material-page__assignment-assessment-icon {
    color: $color-passed;
  }
}

.material-page__assignment-assessment--failed {
  background: lighten($color-failed, 45%);
  border-left-color: $color-failed;

  .material-page__assignment-assessment-grade-data {
    background: $color-failed;
  }

  .material-page__assignment-assessment-icon {
    color: $color-failed;
  }
}

.material-page__assignment-assessment--withdrawn {
  background: lighten($color-withdrawn, 45%);
  border-left-color: $color-withdrawn;

  .material-page__assignment-assessment-grade-data {
    background: $color-withdrawn;
  }

  .material-page__assignment-assessment-icon {
    color: $color-withdrawn;
  }
}

.material-page__assignment-assessment-literal {
  flex-basis: 100%;
  flex-grow: 1;
  flex-shrink: 0;
}

.material-page__assignment-assessment-literal-label,
.material-page__assignment-assessment-verbal-label {
  @include assessment-text;
  font-weight: bold;
}

.material-page__assignment-assessment-literal-data {
  @include assessment-text;
  line-height: 1.375rem;
}

.material-page__assignment-assessment-grade {
  @include assessment-text;
  align-items: center;
  display: flex;
  flex-basis: 100;
  flex-flow: row nowrap;
  flex-grow: 1;
  flex-shrink: 0;
  margin: 0 0 10px;
}

.material-page__assignment-assessment-grade-label {
  font-weight: bold;
  padding: 0 10px 0 0;
}

.material-page__assignment-assessment-grade-data {
  border-radius: 3px;
  color: $color-default;
  line-height: 1;
  padding: 5px 8px;
}

.material-page__assignment-assessment-grade-data--incomplete {
  font-size: 0.625rem;
  text-transform: uppercase;
}

.material-page__assignment-assessment-icon {
  font-size: 2rem;
  line-height: 1;
  opacity: 0.3;
  position: absolute;
  right: 20px;
  top: 20px;
}

.material-page__assignment-assessment-date {
  @include assessment-text;
  align-items: center;
  display: flex;
  flex-basis: 100;
  flex-flow: row nowrap;
  flex-grow: 1;
  flex-shrink: 0;
  margin: 0 0 10px;
}

.material-page__assignment-assessment-date-label {
  font-weight: bold;
  padding: 0 10px 0 0;
}

.material-page__assignment-assessment-date-data {
  @include assessment-text;
  line-height: 1.375rem;
}

// MATERIAL PAGE FIELD ANSWER SYNCHRONIZER
.material-page__field-answer-synchronizer {
  border-radius: 3px;
  display: block;
  font-size: 0.8125rem;
  font-weight: 400;
  left: 4px;
  line-height: 1;
  padding: 5px;
  position: absolute;
  top: -20px;
  transition: background-color 0.2s ease-in-out;
  white-space: nowrap;
}

.material-page__field-answer-synchronizer--saving {
  background: $color-notice;
  color: $color-default-contrast;
}

.material-page__field-answer-synchronizer--saved {
  background: $color-success;
  color: $color-default;
}

.material-page__field-answer-synchronizer--error {
  background: $color-warn;
  color: $color-default;
}

// MATERIAL PAGE CUSTOM BOX STYLES
// These classNames cannot be changed as they a part of material page html and already saved to DB
.material-styles-block {
  box-sizing: content-box;
  font-size: inherit;
  margin: 20px 0;
  min-height: 40px;
  padding: 16px;
  position: relative;

  p:first-child,
  h3:first-child,
  h4:first-child,
  ul:first-child,
  ol:first-child,
  blockquote:first-child {
    margin-top: 0;
  }

  p:last-child,
  h3:first-child,
  h4:first-child,
  ul:last-child,
  ol:last-child,
  blockquote:last-child {
    margin-bottom: 0;
  }

  // This represents the generic icon added to the material style boxes
  &::before {
    align-items: center;
    border-bottom-left-radius: 10px;
    border-top-right-radius: 10px;
    color: $color-default;
    content: "";
    display: flex;
    font-family: muikku;
    font-size: 1.5rem;
    height: 40px;
    justify-content: center;
    left: 16px;
    position: absolute;
    top: 16px;
    width: 40px;
  }
}

// BASIC BOX & GRAMMAR BOX & RECAP BOX
// GRAMMAR BOX & RECAP BOX styles are deprecated but CANNOT be removed from the css.
// GRAMMAR BOX & RECAP BOX are removed from CKE dropdown and existing GRAMMAR BOXes & RECAP BOXes
// inherits BASIC BOX styling
.material-basicbox,
.material-grammarbox,
.material-recapbox {
  background: $color-material-basic-box-background;
  border: 1px solid $color-material-basic-box;
  border-left-width: 1px;

  &::before {
    display: none;
  }
}

// THINKING BOX & JOURNAL BOX
// Thinking box is deprecated style is deprecated but CANNOT be removed from the css.
// Thinking box was primarily used to provide journal specific information
// so new style has been added called JOURNAL BOX. Existing THINKINGBOXes
// inherits JOURNAL BOX styling
.material-thinkingbox,
.material-journalbox {
  border: 1px solid $color-material-journal-box;
  border-left-width: 3px;
  padding-left: 72px;

  &::before {
    background: $color-material-journal-box;
    content: "\f02d";
  }
}

// MATERIAL'S EXERCISE FEEDBACK BOX
// This will be visible only after user submits exercise.
.material-exercise-feedback {
  background: $color-default;
  border: 1px solid $color-example-border;
  border-radius: 2px;
  border-right-width: 10px;
  box-shadow: 0 3px 5px 2px $color-example-box-shadow;
  margin: 20px -30px 20px -20px;
}

.material-exercise-feedback[data-show='true'] {
  display: block;
}

.material-exercise-feedback[data-show='false'] {
  display: none;
}

// INSTRUCTION BOX
.material-instructionbox {
  border: 1px solid $color-material-instruction-box;
  border-left-width: 3px;
  padding-left: 72px;

  &::before {
    background: $color-material-instruction-box;
    content: "\e635";
  }
}

// PONDER BOX
.material-ponderbox {
  border: 1px solid $color-material-ponder-box;
  border-left-width: 3px;
  padding-left: 72px;

  &::before {
    background: $color-material-ponder-box;
    content: "\f0eb";
  }
}

// EVALUATION CRITERIA BOX
.material-assignmentbox {
  border: 1px solid $color-assignment;
  border-left-width: 3px;
  padding-left: 72px;

  &::before {
    background: $color-assignment;
    content: "\e63d";
  }
}

// OBJECTIVE / GOAL BOX
.material-objectivebox {
  border: 1px solid $color-material-objective-box;
  border-left-width: 3px;
  padding-left: 72px;

  &::before {
    background: $color-material-objective-box;
    content: "\f041";
  }
}

// INFORMATION / ATTENTION BOX
.material-infobox {
  border: 1px solid $color-material-info-box;
  border-left-width: 3px;
  padding-left: 72px;

  &::before {
    background: $color-material-info-box;
    content: "\f12a";
  }
}

// LINK BOX
.material-linkbox {
  border: 1px solid $color-material-link-box;
  border-left-width: 3px;
  padding-left: 72px;

  &::before {
    background: $color-material-link-box;
    content: "\e9cb";
  }
}

// MUIKKU LINK BOX
.material-muikkulinkbox {
  border: 1px solid $color-material-muikkulink-box;
  border-left-width: 3px;
  padding-left: 72px;

  &::before {
    background: $color-material-muikkulink-box;
    content: "\e92a";
  }
}

// AUDIO BOX
.material-audiobox {
  border: 1px solid $color-material-audio-box;
  border-left-width: 3px;
  padding-left: 72px;

  &::before {
    background: $color-material-audio-box;
    content: "\ea27";
  }
}

// FILE BOX
.material-filebox {
  border: 1px solid $color-material-file-box;
  border-left-width: 3px;
  padding-left: 72px;

  &::before {
    background: $color-material-file-box;
    content: "\e92c";
  }
}

// TABLE BOX - This style has preset visuals for table and it's elements
.material-tablebox {
  border: 0;
  padding: 0;

  // scss-lint:disable SelectorDepth, NestingDepth
  table,
  table[cellpadding],
  table[cellspacing] {
    border: 0;
    border-collapse: collapse;
    border-spacing: 0;
    font-size: $text-desktop-richtext-font-size;
    line-height: 1.35rem;
    width: 100%;

    caption {
      font-size: 1.0625rem;
      font-weight: 400;
      padding: 8px;
      text-align: left;
    }

    thead {
      border-bottom: 1px solid $color-material-table-header-boder;
    }

    th {
      font-weight: 400;
      padding: 8px;
      text-align: left;
    }

    tbody {

      th[scope="row"] {
        border-right: 1px solid $color-material-table-header-boder;
      }
    }


    tr {

      &:nth-child(even) {
        background: $color-material-table-box-row-background;
      }

      &:nth-child(odd) {
        background: $color-default;
      }
    }

    td {
      padding: 8px;
    }
  }
  // scss-lint:enable SelectorDepth, NestingDepth
}

// TABLE BOX - This style has preset visuals for table and it's elements
.material-tablebox-small {
  border: 0;
  padding: 0;

  // scss-lint:disable SelectorDepth, NestingDepth
  table,
  table[cellpadding],
  table[cellspacing] {
    border: 0;
    border-collapse: collapse;
    border-spacing: 0;
    font-size: $text-desktop-font-size;
    line-height: 1.35rem;
    width: 100%;

    caption {
      font-size: 1rem;
      font-weight: 400;
      padding: 8px;
      text-align: left;
    }

    thead {
      border-bottom: 1px solid $color-material-table-header-boder;
    }

    th {
      font-weight: 400;
      padding: 8px;
      text-align: left;
    }

    tbody {

      th[scope="row"] {
        border-right: 1px solid $color-material-table-header-boder;
      }
    }


    tr {

      &:nth-child(even) {
        background: $color-material-table-box-row-background;
      }

      &:nth-child(odd) {
        background: $color-default;
      }
    }

    td {
      padding: 8px;
    }
  }
  // scss-lint:enable SelectorDepth, NestingDepth
}

// MATERIAL TEXT STYLES
.material-styles-text {
  box-sizing: content-box;
  margin: 20px auto;
  max-width: 920px;
  min-height: 14px;
  position: relative;

  p:first-child,
  h3:first-child,
  h4:first-child,
  ul:first-child,
  ol:first-child,
  blockquote:first-child {
    margin-top: 0;
  }

  p:last-child,
  h3:first-child,
  h4:first-child,
  ul:last-child,
  ol:last-child,
  blockquote:last-child {
    margin-bottom: 0;
  }

  a {
    color: $color-info;
    text-decoration: underline;
  }
}

// HIGHLIGTH TEXT
.material-text-highlight {
  background: $color-material-highlight-text-background;
  border-left: 3px solid $color-material-highlight-text-border;
  border-radius: 0;
  color: $color-default-contrast;
  display: inline-block;
  font-size: 20px;
  line-height: 35px;
  padding: 15px 20px;
}

// CITATION TEXT
.material-citation-basic {
  color: $color-default-contrast;
  display: inline-block;
  font-size: 20px;
  font-style: italic;
  line-height: 40px;
  padding: 10px 35px;
  quotes: "\201C""\201D";

  > p {
    display: inline;
  }

  &::before {
    color: $color-material-citation-quote;
    content: open-quote;
    display: inline-block;
    font-family: arial;
    font-size: 70px;
    line-height: 1px;
    vertical-align: -25px;
    width: 28px;
  }

  &::after {
    color: $color-material-citation-quote;
    content: close-quote;
    display: inline-block;
    font-family: arial;
    font-size: 70px;
    line-height: 1px;
    vertical-align: -25px;
    width: 25px;
  }
}

// LONG CITATION TEXT
.material-citation-long {
  background: $color-material-citation-background;
  box-shadow: none;
  color: $color-default-contrast;
  font-style: normal;
  padding: 12px 12px 12px 50px;
  position: relative;
  quotes: "\201C""\201D";
  text-shadow: none;

  &::before {
    color: $color-material-citation-quote;
    content: open-quote;
    font-family: arial;
    font-size: 60px;
    left: 16px;
    position: absolute;
    top: 26px;
  }
}

// EXAMPLE TEXT
.material-example {
  border-left: 3px solid $color-info;
  border-radius: 0;
  box-shadow: none;
  color: $color-default-contrast;
  padding: 0 10px 4px 15px;
  text-shadow: none;
}

// EXERCISE TEXT
.material-exercise {
  border-left: 3px solid $color-exercise;
  border-radius: 0;
  box-shadow: none;
  color: $color-default-contrast;
  padding: 0 10px 4px 15px;
  text-shadow: none;
}

// Generic AUDIO tag styling
audio {
  border-radius: 3px;
}
